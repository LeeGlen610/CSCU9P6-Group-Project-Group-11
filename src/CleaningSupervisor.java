
// Generated by Together


import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * An interface to SAAMS:
 * Cleaning Supervisor Screen:
 * Inputs events from the Cleaning Supervisor, and displays aircraft information.
 * This class is a controller for the AircraftManagementDatabase: sending it messages to change the aircraft status information.
 * This class also registers as an observer of the AircraftManagementDatabase, and is notified whenever any change occurs in that <<model>> element.
 * See written documentation.
 * @stereotype boundary/view/controller
 * @url element://model:project::SAAMS/design:view:::id3y5z3cko4qme4cko4sw81
 * @url element://model:project::SAAMS/design:node:::id15rnfcko4qme4cko4swib.node107
 * @url element://model:project::SAAMS/design:view:::id15rnfcko4qme4cko4swib
 */
public class CleaningSupervisor extends JFrame
        implements ActionListener {
  private final AircraftManagementDatabase aircraftManagementDatabase;
  /**
  * The Cleaning Supervisor Screen interface has access to the AircraftManagementDatabase.
  * @clientCardinality 1
  * @supplierCardinality 1
  * @label accesses/observes
  * @directed*/
  //private AircraftManagementDatabase lnkUnnamed;
  private JButton awaitMaintenance;
  private JButton awaitRepair;
  private JButton doneCleaning;


  public CleaningSupervisor(AircraftManagementDatabase aircraftManagementDatabase) {
    this.aircraftManagementDatabase = aircraftManagementDatabase;

    setSize(350,150);
    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    Container window = getContentPane();
    window.setLayout(new FlowLayout());

    // update button
    awaitMaintenance = new JButton("Await Maintenance");
    window.add(awaitMaintenance);
      awaitMaintenance.addActionListener(this);


    // show status button
    awaitRepair = new JButton("Await Repair");
    window.add(awaitRepair);
      awaitRepair.addActionListener(this);

    //quit button
    doneCleaning = new JButton("Done Cleaning");
    window.add(doneCleaning);
    doneCleaning.addActionListener(this);

      add(new JLabel("cleaning supervisor view"));
      display = new JTextField("", 15);
      add(display);

    setVisible(true);
    show();
  }

  @Override
  public void actionPerformed(ActionEvent e) {
    if (e.getSource() == awaitMaintenance) {
         //managementRecord.getStatus();
        //managementRecord.getFlightCode();
        display.setText(ManagementRecord.getStatus());
        display.setText(ManagementRecord.getFlightCode());
    }
    else if (e.getSource() == awaitRepair) {
        //managementRecord.getStatus();
        //managementRecord.getFlightCode();
        display.setText(ManagementRecord.getStatus());
        display.setText(ManagementRecord.getFlightCode());
    }
    else if (e.getSource() != doneCleaning) {

    }
    }
}
