// Generated by Together


/**
 * Describes an aircraft's flight plan.
 * An aircraft entering an airport's airspace has come from the "from" airport, and wishes to land at the "to" airport, before travelling on to the "next" airport.
 * So, an aircraft whose flight descriptor contains an itinerary with "Stirling" as the "to" attribute wishes to land at Stirling now, otherwise it is just passing through local airspace on its way to its destination.
 * Incoming flights supply their Itinerary in their flight descriptor, and the ManagementRecord for the flight extracts the Itinerary and holds it separately.
 * Outbound flights have their Itineraries uploaded to the aircraft as it departs in a newly built FlightDescriptor.
 *
 * @stereotype entity
 * @url element://model:project::SAAMS/design:view:::id3oolzcko4qme4cko4sx40
 * @url element://model:project::SAAMS/design:view:::idwwyucko4qme4cko4sgxi
 * @url element://model:project::SAAMS/design:view:::id2fh3ncko4qme4cko4swe5
 */
public class Itinerary {
    /**
     * Constructor: Requires names of where the flight is coming from,
     * where it is going to now, and where next after that.
     *
     * @param from The Location The Plane Came From.
     * @param to   The Location The Plane Is Landing At.
     * @param next The Location The Plane Is Going To Next.
     */
    public Itinerary(String from, String to, String next) {
        this.from = from;
        this.to = to;
        this.next = next;
    }//END CONSTRUCTOR Itinerary

    /**
     * Return the from attribute.
     *
     * @tgGet
     * @return The Location The Plane Came From.
     */
    public String getFrom() {
        return from;
    }//END METHOD getFrom

    /**
     * Return the to attribute.
     *
     * @tgGet
     * @return The Location The Plane Is Landing At.
     */
    public String getTo() {
        return to;
    }//END METHOD getTo

    /**
     * See Itinerary class description.
     */
    private String from;

    /**
     * Return the next attribute.
     *
     * @tgGet
     * @return The Location The Plane Is Going To Next.
     */
    public String getNext() {
        return next;
    }//END METHOD getNext

    /**
     * See Itinerary class description.
     */
    private String to;

    /**
     * See Itinerary class description.
     */
    private String next;

}//END CLASS Itinerary
